{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport styles from \"../styles\";\nimport { addPassword, updatePassword } from \"../utils/Database\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AddPasswordScreen = function AddPasswordScreen(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _ref2 = route.params || {},\n    record = _ref2.record,\n    type = _ref2.type,\n    isUpdate = _ref2.isUpdate;\n  var _useState = useState((record == null ? void 0 : record.website) || ''),\n    _useState2 = _slicedToArray(_useState, 2),\n    webAppName = _useState2[0],\n    setWebAppName = _useState2[1];\n  var _useState3 = useState((record == null ? void 0 : record.username) || ''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    usernameEmail = _useState4[0],\n    setUsernameEmail = _useState4[1];\n  var _useState5 = useState((record == null ? void 0 : record.password) || ''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(type || 'browser'),\n    _useState8 = _slicedToArray(_useState7, 2),\n    category = _useState8[0],\n    setCategory = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    modalVisible = _useState10[0],\n    setModalVisible = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isSuccess = _useState12[0],\n    setIsSuccess = _useState12[1];\n  var clearFields = function clearFields() {\n    setWebAppName('');\n    setUsernameEmail('');\n    setPassword('');\n  };\n  var onSubmit = function onSubmit() {\n    if (!webAppName.trim() || !usernameEmail.trim() || !password.trim()) {\n      setIsSuccess(false);\n      setModalVisible(true);\n      return;\n    }\n    if (isUpdate) {\n      updatePassword(record.id, category, webAppName, usernameEmail, password, function () {\n        setIsSuccess(true);\n        setModalVisible(true);\n      });\n    } else {\n      addPassword(category, webAppName, usernameEmail, password, function () {\n        clearFields();\n        setIsSuccess(true);\n        setModalVisible(true);\n      });\n    }\n  };\n  var handleModalClose = function handleModalClose() {\n    setModalVisible(false);\n    if (isUpdate || !isSuccess) {\n      navigation.goBack();\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: isUpdate ? 'UPDATE PASSWORD' : 'ADD NEW PASSWORD'\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [!isUpdate && _jsxs(Picker, {\n        selectedValue: category,\n        style: styles.picker,\n        onValueChange: function onValueChange(itemValue) {\n          return setCategory(itemValue);\n        },\n        children: [_jsx(Picker.Item, {\n          label: \"Browser\",\n          value: \"browser\"\n        }), _jsx(Picker.Item, {\n          label: \"Application\",\n          value: \"app\"\n        })]\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Web/App Name\",\n        value: webAppName,\n        onChangeText: setWebAppName,\n        placeholderTextColor: \"rgb(102, 102, 102)\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Username or Email\",\n        value: usernameEmail,\n        onChangeText: setUsernameEmail,\n        autoCapitalize: \"none\",\n        placeholderTextColor: \"rgb(102, 102, 102)\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: setPassword,\n        secureTextEntry: true,\n        autoCapitalize: \"none\",\n        placeholderTextColor: \"rgb(102, 102, 102)\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.addButton,\n        onPress: onSubmit,\n        children: _jsx(Text, {\n          style: styles.addButtonText,\n          children: isUpdate ? 'Update Password' : 'Add Password'\n        })\n      })]\n    }), _jsx(Modal, {\n      animationType: \"fade\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: handleModalClose,\n      children: _jsx(View, {\n        style: styles.modalOverlay,\n        children: _jsxs(View, {\n          style: styles.modalContainer,\n          children: [_jsx(Text, {\n            style: styles.modalTitle,\n            children: isSuccess ? 'Success' : 'Error'\n          }), _jsx(Text, {\n            style: styles.modalMessage,\n            children: isSuccess ? isUpdate ? 'Password updated successfully!' : 'Password added successfully!' : 'All fields are required!'\n          }), _jsxs(View, {\n            style: styles.modalActions,\n            children: [_jsx(Pressable, {\n              style: [styles.modalButton, styles.modalCancelButton],\n              onPress: handleModalClose,\n              children: _jsx(Text, {\n                style: styles.modalButtonText,\n                children: isUpdate ? 'Close' : isSuccess ? 'Add Another' : 'Try Again'\n              })\n            }), !isUpdate && isSuccess && _jsx(Pressable, {\n              style: [styles.modalButton, styles.modalDeleteButton],\n              onPress: function onPress() {\n                setModalVisible(false);\n                navigation.goBack();\n              },\n              children: _jsx(Text, {\n                style: styles.modalButtonText,\n                children: \"Done\"\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n};\nexport default AddPasswordScreen;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","Modal","Pressable","Picker","Icon","styles","addPassword","updatePassword","jsx","_jsx","jsxs","_jsxs","AddPasswordScreen","_ref","navigation","route","_ref2","params","record","type","isUpdate","_useState","website","_useState2","_slicedToArray","webAppName","setWebAppName","_useState3","username","_useState4","usernameEmail","setUsernameEmail","_useState5","password","_useState6","setPassword","_useState7","_useState8","category","setCategory","_useState9","_useState10","modalVisible","setModalVisible","_useState11","_useState12","isSuccess","setIsSuccess","clearFields","onSubmit","trim","id","handleModalClose","goBack","style","container","children","title","inputContainer","selectedValue","picker","onValueChange","itemValue","Item","label","value","input","placeholder","onChangeText","placeholderTextColor","autoCapitalize","secureTextEntry","addButton","onPress","addButtonText","animationType","transparent","visible","onRequestClose","modalOverlay","modalContainer","modalTitle","modalMessage","modalActions","modalButton","modalCancelButton","modalButtonText","modalDeleteButton"],"sources":["D:/pro1/PasswordManagerApp/src/screens/AddPasswordScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, Modal, Pressable, Picker } from 'react-native';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\nimport styles from '../styles';\r\nimport { addPassword, updatePassword } from '../utils/Database';\r\n\r\nconst AddPasswordScreen = ({ navigation, route }) => {\r\n  const { record, type, isUpdate } = route.params || {};\r\n  const [webAppName, setWebAppName] = useState(record?.website || '');\r\n  const [usernameEmail, setUsernameEmail] = useState(record?.username || '');\r\n  const [password, setPassword] = useState(record?.password || '');\r\n  const [category, setCategory] = useState(type || 'browser');\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n\r\n  const clearFields = () => {\r\n    setWebAppName('');\r\n    setUsernameEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  const onSubmit = () => {\r\n    if (!webAppName.trim() || !usernameEmail.trim() || !password.trim()) {\r\n      setIsSuccess(false);\r\n      setModalVisible(true);\r\n      return;\r\n    }\r\n\r\n    if (isUpdate) {\r\n      // Update existing password\r\n      updatePassword(record.id, category, webAppName, usernameEmail, password, () => {\r\n        setIsSuccess(true);\r\n        setModalVisible(true);\r\n      });\r\n    } else {\r\n      // Add new password\r\n      addPassword(category, webAppName, usernameEmail, password, () => {\r\n        clearFields();\r\n        setIsSuccess(true);\r\n        setModalVisible(true);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleModalClose = () => {\r\n    setModalVisible(false);\r\n    if (isUpdate || !isSuccess) {\r\n      navigation.goBack();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>{isUpdate ? 'UPDATE PASSWORD' : 'ADD NEW PASSWORD'}</Text>\r\n      <View style={styles.inputContainer}>\r\n        {!isUpdate && (\r\n          <Picker\r\n            selectedValue={category}\r\n            style={styles.picker}\r\n            onValueChange={(itemValue) => setCategory(itemValue)}\r\n          >\r\n            <Picker.Item label=\"Browser\" value=\"browser\" />\r\n            <Picker.Item label=\"Application\" value=\"app\" />\r\n          </Picker>\r\n        )}\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Web/App Name\"\r\n          value={webAppName}\r\n          onChangeText={setWebAppName}\r\n          placeholderTextColor=\"rgb(102, 102, 102)\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Username or Email\"\r\n          value={usernameEmail}\r\n          onChangeText={setUsernameEmail}\r\n          autoCapitalize=\"none\"\r\n          placeholderTextColor=\"rgb(102, 102, 102)\"\r\n        />\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Password\"\r\n          value={password}\r\n          onChangeText={setPassword}\r\n          secureTextEntry\r\n          autoCapitalize=\"none\"\r\n          placeholderTextColor=\"rgb(102, 102, 102)\"\r\n        />\r\n        <TouchableOpacity style={styles.addButton} onPress={onSubmit}>\r\n          <Text style={styles.addButtonText}>{isUpdate ? 'Update Password' : 'Add Password'}</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      <Modal\r\n        animationType=\"fade\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={handleModalClose}\r\n      >\r\n        <View style={styles.modalOverlay}>\r\n          <View style={styles.modalContainer}>\r\n            <Text style={styles.modalTitle}>{isSuccess ? 'Success' : 'Error'}</Text>\r\n            <Text style={styles.modalMessage}>\r\n              {isSuccess\r\n                ? isUpdate\r\n                  ? 'Password updated successfully!'\r\n                  : 'Password added successfully!'\r\n                : 'All fields are required!'}\r\n            </Text>\r\n            <View style={styles.modalActions}>\r\n              <Pressable\r\n                style={[styles.modalButton, styles.modalCancelButton]}\r\n                onPress={handleModalClose}\r\n              >\r\n                <Text style={styles.modalButtonText}>\r\n                  {isUpdate ? 'Close' : isSuccess ? 'Add Another' : 'Try Again'}\r\n                </Text>\r\n              </Pressable>\r\n              {!isUpdate && isSuccess && (\r\n                <Pressable\r\n                  style={[styles.modalButton, styles.modalDeleteButton]}\r\n                  onPress={() => {\r\n                    setModalVisible(false);\r\n                    navigation.goBack();\r\n                  }}\r\n                >\r\n                  <Text style={styles.modalButtonText}>Done</Text>\r\n                </Pressable>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default AddPasswordScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}