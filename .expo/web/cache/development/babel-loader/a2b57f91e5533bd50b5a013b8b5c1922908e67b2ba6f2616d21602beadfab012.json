{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Icon from \"@expo/vector-icons/MaterialIcons\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport BrowserPasswordScreen from \"./src/screens/BrowserPasswordScreen\";\nimport AppPasswordScreen from \"./src/screens/AppPasswordScreen\";\nimport AddPasswordScreen from \"./src/screens/AddPasswordScreen\";\nimport { initDatabase } from \"./src/utils/Database\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nvar Stack = createNativeStackNavigator();\nvar PasswordManagerApp = function PasswordManagerApp() {\n  useEffect(function () {\n    initDatabase();\n  }, []);\n  var MainTabs = function MainTabs() {\n    return _jsxs(Tab.Navigator, {\n      screenOptions: {\n        headerShown: false,\n        tabBarStyle: {\n          backgroundColor: 'rgb(0, 0, 0)',\n          borderTopColor: 'rgb(0, 255, 0)',\n          borderTopWidth: 1\n        },\n        tabBarActiveTintColor: 'rgb(66, 255, 66)',\n        tabBarInactiveTintColor: 'rgb(102, 102, 102)'\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"HomeTab\",\n        component: HomeScreen,\n        options: {\n          tabBarLabel: 'Home',\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n              size = _ref.size;\n            return _jsx(Icon, {\n              name: \"home\",\n              color: color,\n              size: size\n            });\n          }\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"BrowserTab\",\n        options: {\n          tabBarLabel: 'Browser',\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n              size = _ref2.size;\n            return _jsx(Icon, {\n              name: \"web\",\n              color: color,\n              size: size\n            });\n          }\n        },\n        children: function children(props) {\n          return _jsx(BrowserPasswordScreen, _objectSpread({}, props));\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"AppTab\",\n        options: {\n          tabBarLabel: 'Apps',\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n              size = _ref3.size;\n            return _jsx(Icon, {\n              name: \"apps\",\n              color: color,\n              size: size\n            });\n          }\n        },\n        children: function children(props) {\n          return _jsx(AppPasswordScreen, _objectSpread({}, props));\n        }\n      })]\n    });\n  };\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerStyle: {\n          backgroundColor: 'rgb(0, 0, 0)'\n        },\n        headerTintColor: 'rgb(0, 255, 0)',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n          fontSize: 20\n        },\n        headerBackTitleVisible: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Main\",\n        component: MainTabs,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"AddPassword\",\n        options: {\n          title: 'ADD NEW PASSWORD'\n        },\n        children: function children(props) {\n          return _jsx(AddPasswordScreen, _objectSpread({}, props));\n        }\n      })]\n    })\n  });\n};\nexport default PasswordManagerApp;","map":{"version":3,"names":["React","useEffect","NavigationContainer","createBottomTabNavigator","createNativeStackNavigator","Icon","HomeScreen","BrowserPasswordScreen","AppPasswordScreen","AddPasswordScreen","initDatabase","jsx","_jsx","jsxs","_jsxs","Tab","Stack","PasswordManagerApp","MainTabs","Navigator","screenOptions","headerShown","tabBarStyle","backgroundColor","borderTopColor","borderTopWidth","tabBarActiveTintColor","tabBarInactiveTintColor","children","Screen","name","component","options","tabBarLabel","tabBarIcon","_ref","color","size","_ref2","props","_objectSpread","_ref3","headerStyle","headerTintColor","headerTitleStyle","fontWeight","fontSize","headerBackTitleVisible","title"],"sources":["D:/pro1/PasswordManagerApp/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Icon from 'react-native-vector-icons/MaterialIcons';\r\nimport HomeScreen from './src/screens/HomeScreen';\r\nimport BrowserPasswordScreen from './src/screens/BrowserPasswordScreen';\r\nimport AppPasswordScreen from './src/screens/AppPasswordScreen';\r\nimport AddPasswordScreen from './src/screens/AddPasswordScreen';\r\nimport { initDatabase } from './src/utils/Database';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst PasswordManagerApp = () => {\r\n  useEffect(() => {\r\n    initDatabase(); // Initialize the database when the app starts\r\n  }, []);\r\n\r\n  const MainTabs = () => (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        headerShown: false,\r\n        tabBarStyle: { backgroundColor: 'rgb(0, 0, 0)', borderTopColor: 'rgb(0, 255, 0)', borderTopWidth: 1 },\r\n        tabBarActiveTintColor: 'rgb(66, 255, 66)',\r\n        tabBarInactiveTintColor: 'rgb(102, 102, 102)',\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"HomeTab\"\r\n        component={HomeScreen}\r\n        options={{\r\n          tabBarLabel: 'Home',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"home\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"BrowserTab\"\r\n        options={{\r\n          tabBarLabel: 'Browser',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"web\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      >\r\n        {(props) => <BrowserPasswordScreen {...props} />}\r\n      </Tab.Screen>\r\n      <Tab.Screen\r\n        name=\"AppTab\"\r\n        options={{\r\n          tabBarLabel: 'Apps',\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Icon name=\"apps\" color={color} size={size} />\r\n          ),\r\n        }}\r\n      >\r\n        {(props) => <AppPasswordScreen {...props} />}\r\n      </Tab.Screen>\r\n    </Tab.Navigator>\r\n  );\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator\r\n        screenOptions={{\r\n          headerStyle: { backgroundColor: 'rgb(0, 0, 0)' },\r\n          headerTintColor: 'rgb(0, 255, 0)',\r\n          headerTitleStyle: { fontWeight: 'bold', fontSize: 20 },\r\n          headerBackTitleVisible: false,\r\n        }}\r\n      >\r\n        <Stack.Screen\r\n          name=\"Main\"\r\n          component={MainTabs}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Stack.Screen\r\n          name=\"AddPassword\"\r\n          options={{ title: 'ADD NEW PASSWORD' }}\r\n        >\r\n          {(props) => <AddPasswordScreen {...props} />}\r\n        </Stack.Screen>\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default PasswordManagerApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}